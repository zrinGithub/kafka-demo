<?xml version="1.0" encoding="UTF-8" ?>
<configuration>

    <property name="log.path" value="logs" />
    <property name="app.name" value="kafka-demo" />

    <appender name="consoleApp" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>
                %date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n
            </pattern>
        </layout>
    </appender>

    <appender name="fileInfoApp" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>
                %date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n
            </pattern>
        </encoder>
        <!-- 滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 路径 -->
            <fileNamePattern>${log.path}/${app.name}_no_error.%d.log</fileNamePattern>
        </rollingPolicy>
    </appender>

    <appender name="fileErrorApp" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>
                AAA %date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n
            </pattern>
        </encoder>

        <!-- 设置滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 路径 -->
            <fileNamePattern>${log.path}/${app.name}_error.%d.log</fileNamePattern>

            <!-- 控制保留的归档文件的最大数量，超出数量就删除旧文件，假设设置每个月滚动，
            且<maxHistory> 是1，则只保存最近1个月的文件，删除之前的旧文件 -->
            <MaxHistory>1</MaxHistory>

        </rollingPolicy>
    </appender>
<!--    <root level="INFO">-->
<!--        <appender-ref ref="consoleApp"/>-->
<!--        <appender-ref ref="fileInfoApp"/>-->
<!--        <appender-ref ref="fileErrorApp"/>-->
<!--    </root>-->

<!--    若是additivity设为false，则子Logger只会在自己的appender里输出，不会在root的logger的appender里输出（个人可以理解为additivity设为false后，子Logger会覆盖掉root的logger）。-->

    <springProfile name="dev">
        <logger name="com.zr.kafkademo" level="DEBUG"
                additivity="false">
            <appender-ref ref="consoleApp" />
            <appender-ref ref="fileInfoApp" />
            <appender-ref ref="fileErrorApp" />
        </logger>
        <logger name="org.springframework" level="INFO">
            <appender-ref ref="consoleApp" />
            <appender-ref ref="fileInfoApp" />
            <appender-ref ref="fileErrorApp" />
        </logger>
    </springProfile>
    <springProfile name="test">
        <logger name="com.zr.kafkademo" level="DEBUG"
                additivity="false">
            <appender-ref ref="consoleApp" />
            <appender-ref ref="fileInfoApp" />
            <appender-ref ref="fileErrorApp" />
        </logger>
        <logger name="org.springframework" level="INFO">
            <appender-ref ref="consoleApp" />
            <appender-ref ref="fileInfoApp" />
            <appender-ref ref="fileErrorApp" />
        </logger>
    </springProfile>
    <springProfile name="prod">
        <logger name="com.zr.kafkademo" level="INFO"
                additivity="false">
            <appender-ref ref="consoleApp" />
            <appender-ref ref="fileInfoApp" />
            <appender-ref ref="fileErrorApp" />
        </logger>
        <logger name="org.springframework" level="INFO">
            <appender-ref ref="consoleApp" />
            <appender-ref ref="fileInfoApp" />
            <appender-ref ref="fileErrorApp" />
        </logger>
    </springProfile>
</configuration>